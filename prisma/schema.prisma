generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Client {
  id        String   @id @default(cuid())
  cc        String   @unique
  name      String?
  address   String?
  cellphone String
  code      String?
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
  tickets   Ticket[]
}

model Raffle {
  id             String   @id @default(cuid())
  name           String
  priceForTicket Int
  playDate       DateTime
  description    String?
  createAt       DateTime @default(now())
  updateAt       DateTime @updatedAt
  isActive       Boolean  @default(true)
  tickets        Ticket[]
}

model Ticket {
  id       String   @id @default(cuid())
  number   String
  raffleId String
  clientId String?
  status   String   @default("FREE")
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  client   Client?  @relation(fields: [clientId], references: [id])
  raffle   Raffle   @relation(fields: [raffleId], references: [id])
}
